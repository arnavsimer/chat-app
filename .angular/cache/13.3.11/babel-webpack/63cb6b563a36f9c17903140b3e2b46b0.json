{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2023 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Directive, Optional, isDevMode, EventEmitter, forwardRef, Component, Input, Output, HostBinding, ViewChildren, ElementRef, ViewChild, HostListener, ContentChild, NgModule } from '@angular/core';\nimport * as i1$1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i6 from '@progress/kendo-angular-common';\nimport { Keys, ResizeSensorModule } from '@progress/kendo-angular-common';\nimport { fromEvent, Subscription } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@progress/kendo-angular-intl';\nimport { debounceTime } from 'rxjs/operators';\nimport { chevronLeftIcon, chevronRightIcon, paperPlaneIcon } from '@progress/kendo-svg-icons';\nimport * as i1$2 from '@progress/kendo-angular-buttons';\nimport { ButtonModule } from '@progress/kendo-angular-buttons';\n/**\n * Defines a template that will be used for displaying message attachments. To define an attachment\n * template, nest an `<ng-template>` tag with the `kendoChatAttachmentTemplate` attribute inside the\n * `<kendo-chat>` component. The template context is set to the attachment instance. For more information,\n * refer to the article on [message attachments]({% slug attachments_chat %}).\n *\n * {% meta height:700 %}\n * {% embed_file attachments/templates/app.component.ts preview %}\n * {% embed_file shared/app.module.ts preview %}\n * {% embed_file shared/main.ts hidden %}\n * {% endmeta %}\n */\n\nconst _c0 = [\"item\"];\n\nfunction SuggestedActionsComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 1, 2);\n    i0.ɵɵlistener(\"click\", function SuggestedActionsComponent_span_0_Template_span_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const action_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.actionClick(action_r1);\n    })(\"keydown\", function SuggestedActionsComponent_span_0_Template_span_keydown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const action_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.actionKeydown($event, action_r1);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const first_r3 = ctx.first;\n    const last_r4 = ctx.last;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-selected\", ctx_r0.isSelected(index_r2))(\"k-focus\", ctx_r0.isSelected(index_r2))(\"k-first\", first_r3)(\"k-last\", last_r4);\n    i0.ɵɵattribute(\"tabindex\", 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", action_r1.title || action_r1.value, \" \");\n  }\n}\n\nfunction MessageComponent_time_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"time\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-hidden\", !ctx_r0.selected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.formatTimeStamp(ctx_r0.message.timestamp), \" \");\n  }\n}\n\nfunction MessageComponent_ng_container_1_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction MessageComponent_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, MessageComponent_ng_container_1_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.template.templateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r5.message));\n  }\n}\n\nfunction MessageComponent_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.message.text, \" \");\n  }\n}\n\nfunction MessageComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MessageComponent_ng_container_1_div_1_Template, 2, 4, \"div\", 5);\n    i0.ɵɵtemplate(2, MessageComponent_ng_container_1_div_2_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.template);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.template && ctx_r1.message.text);\n  }\n}\n\nfunction MessageComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.message.status, \" \");\n  }\n}\n\nfunction MessageComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 9);\n    i0.ɵɵelement(2, \"span\")(3, \"span\")(4, \"span\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AttachmentComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AttachmentComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AttachmentComponent_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template.templateRef)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nfunction AttachmentComponent_div_1_h5_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.attachment.title, \" \");\n  }\n}\n\nfunction AttachmentComponent_div_1_h6_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.attachment.subtitle, \" \");\n  }\n}\n\nfunction AttachmentComponent_div_1_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\");\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"src\", ctx_r5.attachment.content, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction AttachmentComponent_div_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.attachment.content, \" \");\n  }\n}\n\nfunction AttachmentComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵtemplate(2, AttachmentComponent_div_1_h5_2_Template, 2, 1, \"h5\", 5);\n    i0.ɵɵtemplate(3, AttachmentComponent_div_1_h6_3_Template, 2, 1, \"h6\", 6);\n    i0.ɵɵtemplate(4, AttachmentComponent_div_1_img_4_Template, 1, 1, \"img\", 0);\n    i0.ɵɵtemplate(5, AttachmentComponent_div_1_ng_container_5_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.attachment.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.attachment.subtitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.image);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.unknown);\n  }\n}\n\nconst _c2 = [\"deck\"];\n\nfunction MessageAttachmentsComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MessageAttachmentsComponent_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.scrollTo(-1);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"svgIcon\", ctx_r0.chevronLeftIcon);\n    i0.ɵɵattribute(\"title\", ctx_r0.textFor(\"messageAttachmentLeftArrow\"));\n  }\n}\n\nfunction MessageAttachmentsComponent_kendo_chat_attachment_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-chat-attachment\", 5, 6);\n    i0.ɵɵlistener(\"click\", function MessageAttachmentsComponent_kendo_chat_attachment_3_Template_kendo_chat_attachment_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r7 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.itemClick(index_r7);\n    })(\"keydown\", function MessageAttachmentsComponent_kendo_chat_attachment_3_Template_kendo_chat_attachment_keydown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const att_r6 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.itemKeydown($event, att_r6);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const att_r6 = ctx.$implicit;\n    const index_r7 = ctx.index;\n    const first_r8 = ctx.first;\n    const last_r9 = ctx.last;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-selected\", ctx_r2.isSelected(index_r7))(\"k-focus\", ctx_r2.isSelected(index_r7))(\"k-card-wrap\", true)(\"k-first\", first_r8)(\"k-last\", last_r9);\n    i0.ɵɵproperty(\"attachment\", att_r6)(\"template\", ctx_r2.template);\n    i0.ɵɵattribute(\"tabindex\", ctx_r2.tabbable && ctx_r2.isSelected(index_r7) ? \"0\" : \"-1\");\n  }\n}\n\nfunction MessageAttachmentsComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function MessageAttachmentsComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.scrollTo(1);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"svgIcon\", ctx_r3.chevronRightIcon);\n    i0.ɵɵattribute(\"title\", ctx_r3.textFor(\"messageAttachmentRightArrow\"));\n  }\n}\n\nfunction MessageListComponent_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formatTimeStamp(group_r1.timestamp), \" \");\n  }\n}\n\nfunction MessageListComponent_ng_container_0_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"span\", 12);\n    i0.ɵɵelement(2, \"img\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"alt\", ctx_r8.textFor(\"messageAvatarAlt\"));\n    i0.ɵɵattribute(\"src\", group_r1.author.avatarUrl, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction MessageListComponent_ng_container_0_div_3_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"span\", 12);\n    i0.ɵɵelement(2, \"img\", 17);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const msg_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", msg_r11.user == null ? null : msg_r11.user.avatarUrl, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction MessageListComponent_ng_container_0_div_3_ng_container_2_kendo_chat_attachment_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-chat-attachment\", 18);\n  }\n\n  if (rf & 2) {\n    const msg_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"attachment\", msg_r11.attachments[0])(\"template\", ctx_r16.attachmentTemplate);\n  }\n}\n\nfunction MessageListComponent_ng_container_0_div_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MessageListComponent_ng_container_0_div_3_ng_container_2_div_1_Template, 3, 1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"kendo-chat-message\", 14, 15);\n    i0.ɵɵlistener(\"click\", function MessageListComponent_ng_container_0_div_3_ng_container_2_Template_kendo_chat_message_click_2_listener() {\n      i0.ɵɵrestoreView(_r20);\n\n      const _r15 = i0.ɵɵreference(3);\n\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return ctx_r19.select(_r15);\n    })(\"focus\", function MessageListComponent_ng_container_0_div_3_ng_container_2_Template_kendo_chat_message_focus_2_listener() {\n      i0.ɵɵrestoreView(_r20);\n\n      const _r15 = i0.ɵɵreference(3);\n\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return ctx_r21.select(_r15);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MessageListComponent_ng_container_0_div_3_ng_container_2_kendo_chat_attachment_4_Template, 1, 2, \"kendo-chat-attachment\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r11 = ctx.$implicit;\n    const firstMessage_r12 = ctx.first;\n    const lastMessage_r13 = ctx.last;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    const group_r1 = ctx_r22.$implicit;\n    const lastGroup_r2 = ctx_r22.last;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r11.user == null ? null : msg_r11.user.avatarUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"k-only\", group_r1.messages.length === 1)(\"k-first\", group_r1.messages.length > 1 && firstMessage_r12)(\"k-last\", group_r1.messages.length > 1 && lastMessage_r13);\n    i0.ɵɵproperty(\"message\", msg_r11)(\"tabbable\", lastGroup_r2 && lastMessage_r13)(\"template\", ctx_r9.messageTemplate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", msg_r11.attachments && msg_r11.attachments.length === 1);\n  }\n}\n\nfunction MessageListComponent_ng_container_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, MessageListComponent_ng_container_0_div_3_div_1_Template, 3, 2, \"div\", 9);\n    i0.ɵɵtemplate(2, MessageListComponent_ng_container_0_div_3_ng_container_2_Template, 5, 11, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-alt\", ctx_r4.isOwnMessage(group_r1.messages[0]))(\"k-no-avatar\", !group_r1.author.avatarUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", group_r1.author.avatarUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r1.messages);\n  }\n}\n\nfunction MessageListComponent_ng_container_0_kendo_chat_message_attachments_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-chat-message-attachments\", 19, 20);\n    i0.ɵɵlistener(\"click\", function MessageListComponent_ng_container_0_kendo_chat_message_attachments_4_Template_kendo_chat_message_attachments_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n\n      const _r24 = i0.ɵɵreference(1);\n\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.select(_r24);\n    })(\"focus\", function MessageListComponent_ng_container_0_kendo_chat_message_attachments_4_Template_kendo_chat_message_attachments_focus_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n\n      const _r24 = i0.ɵɵreference(1);\n\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.select(_r24);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext();\n    const group_r1 = ctx_r28.$implicit;\n    const lastGroup_r2 = ctx_r28.last;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"attachments\", group_r1.attachments)(\"layout\", group_r1.attachmentLayout)(\"localization\", ctx_r5.localization)(\"tabbable\", lastGroup_r2)(\"template\", ctx_r5.attachmentTemplate);\n  }\n}\n\nfunction MessageListComponent_ng_container_0_kendo_chat_suggested_actions_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-chat-suggested-actions\", 21, 22);\n    i0.ɵɵlistener(\"dispatch\", function MessageListComponent_ng_container_0_kendo_chat_suggested_actions_5_Template_kendo_chat_suggested_actions_dispatch_0_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const group_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.dispatchAction($event, ctx_r30.last(group_r1.messages));\n    })(\"click\", function MessageListComponent_ng_container_0_kendo_chat_suggested_actions_5_Template_kendo_chat_suggested_actions_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n\n      const _r29 = i0.ɵɵreference(1);\n\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return ctx_r33.select(_r29);\n    })(\"focus\", function MessageListComponent_ng_container_0_kendo_chat_suggested_actions_5_Template_kendo_chat_suggested_actions_focus_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n\n      const _r29 = i0.ɵɵreference(1);\n\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.select(_r29);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext();\n    const group_r1 = ctx_r35.$implicit;\n    const lastGroup_r2 = ctx_r35.last;\n    i0.ɵɵproperty(\"actions\", group_r1.actions)(\"tabbable\", lastGroup_r2);\n  }\n}\n\nfunction MessageListComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0)(1, 2);\n    i0.ɵɵtemplate(2, MessageListComponent_ng_container_0_div_2_Template, 2, 1, \"div\", 3);\n    i0.ɵɵtemplate(3, MessageListComponent_ng_container_0_div_3_Template, 3, 6, \"div\", 4);\n    i0.ɵɵtemplate(4, MessageListComponent_ng_container_0_kendo_chat_message_attachments_4_Template, 2, 5, \"kendo-chat-message-attachments\", 5);\n    i0.ɵɵtemplate(5, MessageListComponent_ng_container_0_kendo_chat_suggested_actions_5_Template, 2, 2, \"kendo-chat-suggested-actions\", 6);\n    i0.ɵɵelementContainerEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", group_r1.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date-marker\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"message-group\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"attachment-group\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"action-group\");\n  }\n}\n\nconst _c3 = [\"messageBoxInput\"];\n\nfunction MessageBoxComponent_ng_container_0_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 4, 5);\n    i0.ɵɵlistener(\"keydown\", function MessageBoxComponent_ng_container_0_input_1_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.inputKeydown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.textFor(\"messagePlaceholder\"));\n    i0.ɵɵattribute(\"role\", \"textbox\")(\"aria-label\", ctx_r2.textFor(\"messageBoxInputLabel\"));\n  }\n}\n\nfunction MessageBoxComponent_ng_container_0_textarea_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"textarea\", 6, 5);\n    i0.ɵɵlistener(\"keydown\", function MessageBoxComponent_ng_container_0_textarea_2_Template_textarea_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.textAreaKeydown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"rows\", 3)(\"placeholder\", ctx_r3.textFor(\"messagePlaceholder\"));\n    i0.ɵɵattribute(\"role\", \"textbox\")(\"aria-label\", ctx_r3.textFor(\"messageBoxInputLabel\"));\n  }\n}\n\nfunction MessageBoxComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MessageBoxComponent_ng_container_0_input_1_Template, 2, 3, \"input\", 1);\n    i0.ɵɵtemplate(2, MessageBoxComponent_ng_container_0_textarea_2_Template, 2, 4, \"textarea\", 2);\n    i0.ɵɵelementStart(3, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MessageBoxComponent_ng_container_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.sendClick();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.type === \"textbox\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.type === \"textarea\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r0.sendIcon)(\"tabindex\", 0);\n    i0.ɵɵattribute(\"title\", ctx_r0.textFor(\"send\"));\n  }\n}\n\nfunction MessageBoxComponent_1_ng_template_0_Template(rf, ctx) {}\n\nfunction MessageBoxComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MessageBoxComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.messageBoxTemplate == null ? null : ctx_r1.messageBoxTemplate.templateRef);\n  }\n}\n\nconst _c4 = [\"messageBox\"];\nconst _c5 = [\"messageList\"];\n\nfunction HeroCardComponent_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction HeroCardComponent_h5_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n  }\n}\n\nfunction HeroCardComponent_h6_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.subtitle, \" \");\n  }\n}\n\nfunction HeroCardComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 9)(1, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function HeroCardComponent_span_5_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const act_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onClick(act_r4);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const act_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", act_r4.title, \" \");\n  }\n}\n\nlet AttachmentTemplateDirective = /*#__PURE__*/(() => {\n  class AttachmentTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  }\n\n  AttachmentTemplateDirective.ɵfac = function AttachmentTemplateDirective_Factory(t) {\n    return new (t || AttachmentTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n  };\n\n  AttachmentTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AttachmentTemplateDirective,\n    selectors: [[\"\", \"kendoChatAttachmentTemplate\", \"\"]]\n  });\n  return AttachmentTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Arguments for the `SendMessage` event.\n *\n */\n\n\nclass SendMessageEvent {\n  /**\n   * @hidden\n   */\n  constructor(message) {\n    this.message = message;\n  }\n\n}\n\nconst noop = () => {};\n\nconst handlers = {\n  'reply': (action, sender) => {\n    sender.sendMessage.emit(new SendMessageEvent({\n      author: sender.user,\n      text: action.value,\n      timestamp: new Date()\n    }));\n  },\n  'call': action => {\n    window.open('tel:' + action.value);\n  },\n  'openUrl': action => {\n    window.open(action.value);\n  }\n};\n/**\n * @hidden\n */\n\nconst makeHandler = action => handlers[action.type] || noop;\n/**\n * Defines a template that will be used for displaying Chat messages. To define an attachment\n * template, nest an `<ng-template>` tag with the `kendoChatMessageTemplate` attribute inside the\n * `<kendo-chat>` component. The template context is set to the message instance. For more information,\n * refer to the article on [message templates]({% slug message_templates_chat %}).\n *\n * {% meta height:700 %}\n * {% embed_file messages/templates/app.component.ts preview %}\n * {% embed_file shared/app.module.ts preview %}\n * {% embed_file shared/main.ts hidden %}\n * {% endmeta %}\n */\n\n\nlet MessageTemplateDirective = /*#__PURE__*/(() => {\n  class MessageTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  }\n\n  MessageTemplateDirective.ɵfac = function MessageTemplateDirective_Factory(t) {\n    return new (t || MessageTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n  };\n\n  MessageTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MessageTemplateDirective,\n    selectors: [[\"\", \"kendoChatMessageTemplate\", \"\"]]\n  });\n  return MessageTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @hidden\n */\n\n\nconst packageMetadata = {\n  name: '@progress/kendo-angular-conversational-ui',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1703060635,\n  version: '14.3.0',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n/**\n * Creates a message box area that overrides the default message box of the Conversational UI Component.\n * To define a message-box template, nest an `<ng-template>` tag with the `kendoChatMessageBoxTemplate` directive inside the `<kendo-chat>` tag\n * [see example]({% slug message_box %}#toc-message-box-template).\n */\n\nlet ChatMessageBoxTemplateDirective = /*#__PURE__*/(() => {\n  class ChatMessageBoxTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  }\n\n  ChatMessageBoxTemplateDirective.ɵfac = function ChatMessageBoxTemplateDirective_Factory(t) {\n    return new (t || ChatMessageBoxTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n\n  ChatMessageBoxTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ChatMessageBoxTemplateDirective,\n    selectors: [[\"\", \"kendoChatMessageBoxTemplate\", \"\"]]\n  });\n  return ChatMessageBoxTemplateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @hidden\n */\n\n\nclass PreventableEvent {\n  constructor() {\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses\n   * the built-in behavior that follows the event.\n   */\n\n\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * Returns `true` if the event was prevented\n   * by any of its subscribers.\n   *\n   * @returns `true` if the default action was prevented.\n   * Otherwise, returns `false`.\n   */\n\n\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n\n}\n/**\n * Arguments for the `executeAction` event. The `executeAction` event fires when the user clicks\n * a quick action button. Calling `preventDefault()` suppresses the built-in action handler.\n */\n\n\nclass ExecuteActionEvent extends PreventableEvent {\n  /**\n   * @hidden\n   */\n  constructor(action, message) {\n    super();\n    this.action = action;\n    this.message = message;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst closest = (node, predicate) => {\n  while (node && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  return node;\n};\n/**\n * @hidden\n */\n\n\nclass ChatItem {}\n/**\n * @hidden\n */\n\n\nconst isAuthor = (user, msg) => user && msg.author && user.id === msg.author.id;\n\nconst last = arr => arr[arr.length - 1];\n\nconst dateChanged = (curr, prev) => curr && prev && (prev.getDate() !== curr.getDate() || prev.getMonth() !== curr.getMonth() || prev.getFullYear() !== curr.getFullYear());\n\nconst addDateMarker = (acc, msg) => {\n  const timestamp = msg.timestamp;\n  const lastItem = last(acc);\n\n  if (!timestamp) {\n    return;\n  }\n\n  if (!lastItem || dateChanged(timestamp, lastItem.timestamp)) {\n    const dateMarker = {\n      type: 'date-marker',\n      timestamp: timestamp,\n      trackBy: timestamp.getTime()\n    };\n    acc.push(dateMarker);\n  }\n};\n\nconst groupMessages = (acc, msg, isLastMessage) => {\n  const lastItem = last(acc);\n  let messages;\n\n  if (isDevMode() && !msg.author) {\n    throw new Error('Author must be set for message: ' + JSON.stringify(msg));\n  }\n\n  if (msg.typing && !isLastMessage) {\n    return;\n  }\n\n  if (lastItem && lastItem.type === 'message-group') {\n    messages = lastItem.messages;\n  }\n\n  if (messages && isAuthor(msg.author, last(messages))) {\n    messages.push(msg);\n  } else {\n    acc.push({\n      type: 'message-group',\n      messages: [msg],\n      author: msg.author,\n      timestamp: msg.timestamp,\n      trackBy: msg\n    });\n  }\n};\n\nconst groupItems = total => (acc, msg, index) => {\n  const isLastMessage = index === total - 1;\n  addDateMarker(acc, msg);\n  groupMessages(acc, msg, isLastMessage);\n\n  if (msg.attachments && msg.attachments.length > 1) {\n    acc.push({\n      type: 'attachment-group',\n      attachments: msg.attachments,\n      attachmentLayout: msg.attachmentLayout,\n      timestamp: msg.timestamp,\n      trackBy: msg\n    });\n  }\n\n  if (msg.suggestedActions && isLastMessage) {\n    acc.push({\n      type: 'action-group',\n      actions: msg.suggestedActions,\n      timestamp: msg.timestamp,\n      trackBy: msg\n    });\n  }\n\n  return acc;\n};\n/**\n * @hidden\n */\n\n\nconst chatView = messages => messages.reduce(groupItems(messages.length), []);\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * @hidden\n */\n\n\nlet SuggestedActionsComponent = /*#__PURE__*/(() => {\n  class SuggestedActionsComponent extends ChatItem {\n    constructor() {\n      super(...arguments);\n      this.dispatch = new EventEmitter();\n      this.defaultClass = true;\n      this.selectedIndex = 0;\n      this.keyHandlers = {\n        [Keys.Tab]: e => this.changeSelectedIndex(e),\n        [Keys.Enter]: (_, action) => this.actionClick(action),\n        [Keys.Space]: (_, action) => this.actionClick(action)\n      };\n    }\n\n    isSelected(index) {\n      return this.selected && this.selectedIndex === index;\n    }\n\n    actionClick(action) {\n      this.dispatch.next(action);\n    }\n\n    actionKeydown(e, action) {\n      const handler = this.keyHandlers[e.keyCode];\n\n      if (handler) {\n        handler(e, action);\n      }\n    }\n\n    focus() {}\n\n    changeSelectedIndex(e) {\n      const offset = e.shiftKey ? -1 : 1;\n      const prevIndex = this.selectedIndex;\n      this.selectedIndex = Math.max(0, Math.min(prevIndex + offset, this.items.length - 1));\n    }\n\n  }\n\n  SuggestedActionsComponent.ɵfac = /* @__PURE__ */function () {\n    let ɵSuggestedActionsComponent_BaseFactory;\n    return function SuggestedActionsComponent_Factory(t) {\n      return (ɵSuggestedActionsComponent_BaseFactory || (ɵSuggestedActionsComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SuggestedActionsComponent)))(t || SuggestedActionsComponent);\n    };\n  }();\n\n  SuggestedActionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SuggestedActionsComponent,\n    selectors: [[\"kendo-chat-suggested-actions\"]],\n    viewQuery: function SuggestedActionsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function SuggestedActionsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-quick-replies\", ctx.defaultClass);\n      }\n    },\n    inputs: {\n      actions: \"actions\",\n      tabbable: \"tabbable\"\n    },\n    outputs: {\n      dispatch: \"dispatch\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: ChatItem,\n      useExisting: forwardRef(() => SuggestedActionsComponent)\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"k-quick-reply\", \"role\", \"button\", 3, \"k-selected\", \"k-focus\", \"k-first\", \"k-last\", \"click\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"button\", 1, \"k-quick-reply\", 3, \"click\", \"keydown\"], [\"item\", \"\"]],\n    template: function SuggestedActionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SuggestedActionsComponent_span_0_Template, 3, 10, \"span\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.actions);\n      }\n    },\n    directives: [i2.NgForOf],\n    encapsulation: 2\n  });\n  return SuggestedActionsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // eslint-disable no-forward-ref\n\n/**\n * @hidden\n */\n\n\nlet MessageComponent = /*#__PURE__*/(() => {\n  class MessageComponent extends ChatItem {\n    constructor(element, intl) {\n      super();\n      this.element = element;\n      this.intl = intl;\n      this.cssClass = true;\n    }\n\n    get tabIndex() {\n      return this.tabbable ? '0' : '-1';\n    }\n\n    formatTimeStamp(date) {\n      return this.intl.formatDate(date, {\n        datetime: 'short'\n      });\n    }\n\n    focus() {\n      this.element.nativeElement.focus();\n    }\n\n  }\n\n  MessageComponent.ɵfac = function MessageComponent_Factory(t) {\n    return new (t || MessageComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.IntlService));\n  };\n\n  MessageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MessageComponent,\n    selectors: [[\"kendo-chat-message\"]],\n    hostVars: 7,\n    hostBindings: function MessageComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabIndex\", ctx.tabIndex);\n        i0.ɵɵclassProp(\"k-message\", ctx.cssClass)(\"k-selected\", ctx.selected)(\"k-focus\", ctx.selected);\n      }\n    },\n    inputs: {\n      message: \"message\",\n      tabbable: \"tabbable\",\n      template: \"template\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: ChatItem,\n      useExisting: forwardRef(() => MessageComponent)\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 5,\n    vars: 4,\n    consts: [[\"class\", \"k-message-time\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"k-message-status\", 4, \"ngIf\"], [\"typing\", \"\"], [1, \"k-message-time\"], [\"class\", \"k-chat-bubble\", 4, \"ngIf\"], [1, \"k-chat-bubble\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-message-status\"], [1, \"k-typing-indicator\"]],\n    template: function MessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MessageComponent_time_0_Template, 2, 2, \"time\", 0);\n        i0.ɵɵtemplate(1, MessageComponent_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, MessageComponent_span_2_Template, 2, 1, \"span\", 2);\n        i0.ɵɵtemplate(3, MessageComponent_ng_template_3_Template, 5, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(4);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.message.timestamp);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.message.typing)(\"ngIfElse\", _r3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.message.status);\n      }\n    },\n    directives: [i2.NgIf, i2.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return MessageComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @hidden\n */\n\n\nlet AttachmentComponent = /*#__PURE__*/(() => {\n  class AttachmentComponent {\n    set attachment(value) {\n      this._attachment = value;\n      this.context = {\n        $implicit: this.attachment\n      };\n    }\n\n    get attachment() {\n      return this._attachment;\n    }\n\n    get image() {\n      return this.contentType.indexOf('image/') === 0;\n    }\n\n    get unknown() {\n      return !this.image;\n    }\n\n    get contentType() {\n      return this.attachment.contentType || '';\n    }\n\n  }\n\n  AttachmentComponent.ɵfac = function AttachmentComponent_Factory(t) {\n    return new (t || AttachmentComponent)();\n  };\n\n  AttachmentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AttachmentComponent,\n    selectors: [[\"kendo-chat-attachment\"]],\n    inputs: {\n      attachment: \"attachment\",\n      template: \"template\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"k-card\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-card\"], [1, \"k-card-body\"], [\"class\", \"k-card-title\", 4, \"ngIf\"], [\"class\", \"k-card-subtitle\", 4, \"ngIf\"], [1, \"k-card-title\"], [1, \"k-card-subtitle\"]],\n    template: function AttachmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AttachmentComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, AttachmentComponent_div_1_Template, 6, 4, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.template);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.template);\n      }\n    },\n    directives: [i2.NgIf, i2.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return AttachmentComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable no-forward-ref\n\n/**\n * @hidden\n */\n\n\nlet MessageAttachmentsComponent = /*#__PURE__*/(() => {\n  class MessageAttachmentsComponent extends ChatItem {\n    constructor(zone, localizationService) {\n      super();\n      this.zone = zone;\n      this.localizationService = localizationService;\n      /**\n       * @hidden\n       */\n\n      this.chevronLeftIcon = chevronLeftIcon;\n      /**\n       * @hidden\n       */\n\n      this.chevronRightIcon = chevronRightIcon;\n      this.scrollPosition = 0;\n      this.selectedIndex = 0;\n      this.carouselKeyHandlers = {\n        [Keys.ArrowLeft]: e => this.navigateTo(e, this.direction === 'rtl' ? 1 : -1),\n        [Keys.ArrowRight]: e => this.navigateTo(e, this.direction === 'rtl' ? -1 : 1)\n      };\n      this.listKeyHandlers = {\n        [Keys.ArrowUp]: e => this.navigateTo(e, -1),\n        [Keys.ArrowDown]: e => this.navigateTo(e, 1)\n      };\n      this.direction = this.localizationService.rtl ? 'rtl' : 'ltr';\n    }\n\n    get carousel() {\n      return this.layout !== 'list';\n    }\n\n    get showLeftArrow() {\n      return this.carousel && this.direction === 'rtl' ? this.scrollPosition > -1 : this.scrollPosition > 0;\n    }\n\n    get showRightArrow() {\n      return this.carousel && this.direction === 'rtl' ? this.scrollPosition < 0 : this.scrollPosition < 1;\n    }\n\n    ngAfterViewInit() {\n      this.zone.runOutsideAngular(() => {\n        const scrollDebounceTime = 100;\n        this.scrollSubscription = fromEvent(this.deck.nativeElement, 'scroll').pipe(debounceTime(scrollDebounceTime)).subscribe(() => this.onScroll());\n      });\n    }\n\n    ngOnDestroy() {\n      this.scrollSubscription.unsubscribe();\n    }\n\n    isSelected(index) {\n      return this.selectedIndex === index;\n    }\n\n    itemKeydown(e, attachment) {\n      const keyHandlers = this.layout === 'list' ? this.listKeyHandlers : this.carouselKeyHandlers;\n      const handler = keyHandlers[e.keyCode];\n\n      if (handler) {\n        handler(e, attachment);\n      }\n    }\n\n    itemClick(index) {\n      this.select(index);\n    }\n\n    focus() {\n      this.select(this.selectedIndex);\n    }\n\n    scrollTo(dir) {\n      const el = this.deck.nativeElement;\n      const scrollStep = el.scrollWidth / this.items.length;\n      const max = el.scrollWidth - el.offsetWidth;\n      const pos = el.scrollLeft + scrollStep * dir;\n      el.scrollLeft = this.direction === 'rtl' ? Math.min(0, max, pos) : Math.max(0, Math.min(max, pos));\n    }\n\n    select(index) {\n      this.selectedIndex = index;\n      const item = this.items.toArray()[index];\n\n      if (item) {\n        item.nativeElement.focus();\n      }\n    }\n\n    navigateTo(e, offset) {\n      const prevIndex = this.selectedIndex;\n      const nextIndex = Math.max(0, Math.min(prevIndex + offset, this.items.length - 1));\n\n      if (nextIndex !== prevIndex) {\n        this.select(nextIndex);\n        e.preventDefault();\n      }\n    }\n\n    onScroll() {\n      const el = this.deck.nativeElement;\n\n      if (el.scrollWidth === 0) {\n        return;\n      }\n\n      const pos = el.scrollLeft / (el.scrollWidth - el.offsetWidth);\n\n      if (pos !== this.scrollPosition) {\n        this.zone.run(() => {\n          this.scrollPosition = pos;\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    textFor(key) {\n      return this.localization.get(key);\n    }\n\n  }\n\n  MessageAttachmentsComponent.ɵfac = function MessageAttachmentsComponent_Factory(t) {\n    return new (t || MessageAttachmentsComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  };\n\n  MessageAttachmentsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MessageAttachmentsComponent,\n    selectors: [[\"kendo-chat-message-attachments\"]],\n    viewQuery: function MessageAttachmentsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 7, ElementRef);\n        i0.ɵɵviewQuery(_c0, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deck = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function MessageAttachmentsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-card-deck-scrollwrap\", ctx.carousel);\n      }\n    },\n    inputs: {\n      attachments: \"attachments\",\n      layout: \"layout\",\n      tabbable: \"tabbable\",\n      template: \"template\",\n      localization: \"localization\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: ChatItem,\n      useExisting: forwardRef(() => MessageAttachmentsComponent)\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 5,\n    vars: 7,\n    consts: [[\"kendoButton\", \"\", \"tabindex\", \"-1\", \"icon\", \"chevron-left\", 3, \"svgIcon\", \"click\", 4, \"ngIf\"], [\"deck\", \"\"], [3, \"attachment\", \"template\", \"k-selected\", \"k-focus\", \"k-card-wrap\", \"k-first\", \"k-last\", \"click\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [\"kendoButton\", \"\", \"tabindex\", \"-1\", \"icon\", \"chevron-right\", 3, \"svgIcon\", \"click\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"tabindex\", \"-1\", \"icon\", \"chevron-left\", 3, \"svgIcon\", \"click\"], [3, \"attachment\", \"template\", \"click\", \"keydown\"], [\"item\", \"\"], [\"kendoButton\", \"\", \"tabindex\", \"-1\", \"icon\", \"chevron-right\", 3, \"svgIcon\", \"click\"]],\n    template: function MessageAttachmentsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MessageAttachmentsComponent_button_0_Template, 1, 2, \"button\", 0);\n        i0.ɵɵelementStart(1, \"div\", null, 1);\n        i0.ɵɵtemplate(3, MessageAttachmentsComponent_kendo_chat_attachment_3_Template, 2, 13, \"kendo-chat-attachment\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, MessageAttachmentsComponent_button_4_Template, 1, 2, \"button\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showLeftArrow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"k-card-deck\", ctx.carousel)(\"k-card-list\", !ctx.carousel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.attachments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showRightArrow);\n      }\n    },\n    directives: [i1$2.ButtonComponent, AttachmentComponent, i2.NgIf, i2.NgForOf],\n    encapsulation: 2\n  });\n  return MessageAttachmentsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/**\n * @hidden\n */\n\n\nlet MessageListComponent = /*#__PURE__*/(() => {\n  class MessageListComponent {\n    constructor(element, intl, renderer) {\n      this.element = element;\n      this.intl = intl;\n      this.renderer = renderer;\n      this.executeAction = new EventEmitter();\n      this.navigate = new EventEmitter();\n      this.resize = new EventEmitter();\n      this.cssClass = true;\n      this.view = [];\n      this.subs = new Subscription();\n      this.keyActions = {\n        [Keys.Home]: _ => this.onHomeOrEndKeyDown('home'),\n        [Keys.End]: _ => this.onHomeOrEndKeyDown('end'),\n        [Keys.ArrowUp]: e => this.navigateTo(e, -1),\n        [Keys.ArrowDown]: e => this.navigateTo(e, 1),\n        [Keys.Tab]: e => this.onTabKeyDown(e)\n      };\n    }\n\n    set messages(value) {\n      const data = value || [];\n      this.view = chatView(data);\n      this._messages = data;\n    }\n\n    get messages() {\n      return this._messages;\n    }\n\n    ngOnInit() {\n      const elRef = this.element.nativeElement;\n      this.subs.add(this.renderer.listen(elRef, 'keydown', event => this.onKeydown(event)));\n      this.subs.add(this.renderer.listen(elRef, 'focusout', event => this.onBlur(event)));\n    }\n\n    ngAfterViewInit() {\n      this.selectedItem = this.items.last;\n    }\n\n    ngOnDestroy() {\n      this.subs.unsubscribe();\n    }\n\n    onResize() {\n      this.resize.emit();\n    }\n\n    formatTimeStamp(date) {\n      return this.intl.formatDate(date, {\n        date: 'full'\n      });\n    }\n\n    onKeydown(e) {\n      const action = this.keyActions[e.keyCode];\n\n      if (action) {\n        action(e);\n      }\n    }\n\n    onBlur(args) {\n      const next = args.relatedTarget || document.activeElement;\n      const outside = !closest(next, node => node === this.element.nativeElement);\n\n      if (outside) {\n        this.select(null);\n      }\n    }\n\n    isOwnMessage(msg) {\n      return isAuthor(this.user, msg);\n    }\n\n    dispatchAction(action, message) {\n      const args = new ExecuteActionEvent(action, message);\n      this.executeAction.emit(args);\n    }\n\n    trackGroup(_index, item) {\n      return item.trackBy;\n    }\n\n    select(item) {\n      const prevItem = this.selectedItem;\n\n      if (prevItem) {\n        prevItem.selected = false;\n      }\n\n      if (item) {\n        item.selected = true;\n        this.selectedItem = item;\n      }\n    }\n\n    last(items) {\n      if (!items || items.length === 0) {\n        return;\n      }\n\n      return items[items.length - 1];\n    }\n\n    onHomeOrEndKeyDown(key) {\n      const items = this.items.toArray();\n\n      if (key === 'home') {\n        items[0].focus();\n      } else {\n        items[items.length - 1].focus();\n      }\n    }\n\n    onTabKeyDown(event) {\n      const item = this.items.toArray()[this.items.length - 1];\n      const isLastItemQuickReply = item instanceof SuggestedActionsComponent;\n      const isLastItemMessage = item instanceof MessageComponent;\n      event.target.blur();\n\n      if (isLastItemQuickReply || isLastItemMessage) {\n        this.select(item);\n        item.focus();\n        this.navigate.emit();\n      }\n    }\n\n    navigateTo(e, offset) {\n      var _a;\n\n      const items = this.items.toArray();\n      const prevItem = this.selectedItem;\n      const prevIndex = items.indexOf(prevItem);\n      const nextIndex = Math.max(0, Math.min(prevIndex + offset, this.items.length - 1));\n      const nextItem = items[nextIndex];\n      const isNextItemQuickReply = nextItem instanceof SuggestedActionsComponent;\n\n      if (nextItem !== prevItem) {\n        if (isNextItemQuickReply) {\n          (_a = nextItem.items.toArray()[0]) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n        }\n\n        this.select(nextItem);\n        nextItem.focus();\n        this.navigate.emit();\n        e.preventDefault();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    textFor(key) {\n      return this.localization.get(key);\n    }\n\n  }\n\n  MessageListComponent.ɵfac = function MessageListComponent_Factory(t) {\n    return new (t || MessageListComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  MessageListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MessageListComponent,\n    selectors: [[\"kendo-chat-message-list\"]],\n    viewQuery: function MessageListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ChatItem, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function MessageListComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-message-list-content\", ctx.cssClass);\n      }\n    },\n    inputs: {\n      messages: \"messages\",\n      attachmentTemplate: \"attachmentTemplate\",\n      messageTemplate: \"messageTemplate\",\n      localization: \"localization\",\n      user: \"user\"\n    },\n    outputs: {\n      executeAction: \"executeAction\",\n      navigate: \"navigate\",\n      resize: \"resize\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"resize\"], [3, \"ngSwitch\"], [\"class\", \"k-timestamp\", 4, \"ngSwitchCase\"], [\"class\", \"k-message-group\", 3, \"k-alt\", \"k-no-avatar\", 4, \"ngSwitchCase\"], [3, \"attachments\", \"layout\", \"localization\", \"tabbable\", \"template\", \"click\", \"focus\", 4, \"ngSwitchCase\"], [3, \"actions\", \"tabbable\", \"dispatch\", \"click\", \"focus\", 4, \"ngSwitchCase\"], [1, \"k-timestamp\"], [1, \"k-message-group\"], [\"class\", \"k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"k-avatar\", \"k-avatar-md\", \"k-avatar-solid\", \"k-avatar-solid-primary\", \"k-rounded-full\"], [1, \"k-avatar-image\"], [3, \"alt\"], [3, \"message\", \"tabbable\", \"template\", \"click\", \"focus\"], [\"message\", \"\"], [3, \"attachment\", \"template\", 4, \"ngIf\"], [3, \"src\"], [3, \"attachment\", \"template\"], [3, \"attachments\", \"layout\", \"localization\", \"tabbable\", \"template\", \"click\", \"focus\"], [\"attachments\", \"\"], [3, \"actions\", \"tabbable\", \"dispatch\", \"click\", \"focus\"], [\"actions\", \"\"]],\n    template: function MessageListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MessageListComponent_ng_container_0_Template, 6, 5, \"ng-container\", 0);\n        i0.ɵɵelementStart(1, \"kendo-resize-sensor\", 1);\n        i0.ɵɵlistener(\"resize\", function MessageListComponent_Template_kendo_resize_sensor_resize_1_listener() {\n          return ctx.onResize();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.view)(\"ngForTrackBy\", ctx.trackGroup);\n      }\n    },\n    directives: [MessageComponent, AttachmentComponent, MessageAttachmentsComponent, SuggestedActionsComponent, i6.ResizeSensorComponent, i2.NgForOf, i2.NgSwitch, i2.NgSwitchCase, i2.NgIf],\n    encapsulation: 2\n  });\n  return MessageListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @hidden\n */\n\n\nlet FocusedStateDirective = /*#__PURE__*/(() => {\n  class FocusedStateDirective {\n    constructor() {\n      this.focused = false;\n    }\n\n    onFocus() {\n      this.focused = true;\n    }\n\n    onBlur() {\n      this.focused = false;\n    }\n\n  }\n\n  FocusedStateDirective.ɵfac = function FocusedStateDirective_Factory(t) {\n    return new (t || FocusedStateDirective)();\n  };\n\n  FocusedStateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FocusedStateDirective,\n    selectors: [[\"\", \"kendoChatFocusedState\", \"\"]],\n    hostVars: 2,\n    hostBindings: function FocusedStateDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focusin\", function FocusedStateDirective_focusin_HostBindingHandler() {\n          return ctx.onFocus();\n        })(\"focusout\", function FocusedStateDirective_focusout_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-focus\", ctx.focused);\n      }\n    }\n  });\n  return FocusedStateDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @hidden\n */\n\n\nlet MessageBoxComponent = /*#__PURE__*/(() => {\n  class MessageBoxComponent {\n    constructor() {\n      this.hostClasses = 'k-message-box k-input k-input-md k-rounded-md k-input-solid';\n      this.sendMessage = new EventEmitter();\n      /**\n       * @hidden\n       */\n\n      this.sendIcon = paperPlaneIcon;\n    }\n\n    get messageBoxValue() {\n      return this.type === 'textarea';\n    }\n    /**\n     * @hidden\n     */\n\n\n    sendClick() {\n      const input = this.messageBoxInput.nativeElement;\n      const value = input.value;\n\n      if (!value) {\n        return;\n      }\n\n      const message = {\n        author: this.user,\n        text: value,\n        timestamp: new Date()\n      };\n      this.sendMessage.emit(new SendMessageEvent(message));\n      input.value = null;\n      input.focus();\n      this.autoScroll = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    inputKeydown(e) {\n      if (e.keyCode === Keys.Enter) {\n        this.sendClick();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    textAreaKeydown(e) {\n      const isEnter = e.keyCode === Keys.Enter;\n\n      if (!isEnter) {\n        return;\n      }\n\n      const newLine = e.metaKey || e.ctrlKey;\n      const enterOnly = !(e.shiftKey || e.metaKey || e.ctrlKey);\n\n      if (enterOnly) {\n        e.preventDefault();\n        this.sendClick();\n      }\n\n      if (newLine) {\n        this.messageBoxInput.nativeElement.value += `\\r\\n`;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    textFor(key) {\n      return this.localization.get(key);\n    }\n\n  }\n\n  MessageBoxComponent.ɵfac = function MessageBoxComponent_Factory(t) {\n    return new (t || MessageBoxComponent)();\n  };\n\n  MessageBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MessageBoxComponent,\n    selectors: [[\"kendo-message-box\"]],\n    viewQuery: function MessageBoxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageBoxInput = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function MessageBoxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.hostClasses);\n        i0.ɵɵclassProp(\"!k-align-items-end\", ctx.messageBoxValue);\n      }\n    },\n    inputs: {\n      user: \"user\",\n      autoScroll: \"autoScroll\",\n      type: \"type\",\n      localization: \"localization\",\n      messageBoxTemplate: \"messageBoxTemplate\"\n    },\n    outputs: {\n      sendMessage: \"sendMessage\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"kendoChatFocusedState\", \"\", \"type\", \"text\", \"class\", \"k-textbox k-input k-input-md k-input-solid\", 3, \"placeholder\", \"keydown\", 4, \"ngIf\"], [\"kendoChatFocusedState\", \"\", \"class\", \"k-textarea k-input k-input-md k-input-solid !k-overflow-y-auto k-resize-none\", 3, \"rows\", \"placeholder\", \"keydown\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", \"icon\", \"paper-plane\", 1, \"k-chat-send\", 3, \"svgIcon\", \"tabindex\", \"click\"], [\"kendoChatFocusedState\", \"\", \"type\", \"text\", 1, \"k-textbox\", \"k-input\", \"k-input-md\", \"k-input-solid\", 3, \"placeholder\", \"keydown\"], [\"messageBoxInput\", \"\"], [\"kendoChatFocusedState\", \"\", 1, \"k-textarea\", \"k-input\", \"k-input-md\", \"k-input-solid\", \"!k-overflow-y-auto\", \"k-resize-none\", 3, \"rows\", \"placeholder\", \"keydown\"], [3, \"ngTemplateOutlet\"]],\n    template: function MessageBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MessageBoxComponent_ng_container_0_Template, 4, 5, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, MessageBoxComponent_1_Template, 1, 1, null, 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.messageBoxTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.messageBoxTemplate);\n      }\n    },\n    directives: [i1$2.ButtonComponent, i2.NgIf, FocusedStateDirective, i2.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return MessageBoxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @hidden\n */\n\n\nlet Messages = /*#__PURE__*/(() => {\n  class Messages extends ComponentMessages {}\n\n  Messages.ɵfac = /* @__PURE__ */function () {\n    let ɵMessages_BaseFactory;\n    return function Messages_Factory(t) {\n      return (ɵMessages_BaseFactory || (ɵMessages_BaseFactory = i0.ɵɵgetInheritedFactory(Messages)))(t || Messages);\n    };\n  }();\n\n  Messages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: Messages,\n    selectors: [[\"kendoConversationalUIMessages\"]],\n    inputs: {\n      messagePlaceholder: \"messagePlaceholder\",\n      send: \"send\",\n      messageListLabel: \"messageListLabel\",\n      messageBoxInputLabel: \"messageBoxInputLabel\",\n      messageAttachmentLeftArrow: \"messageAttachmentLeftArrow\",\n      messageAttachmentRightArrow: \"messageAttachmentRightArrow\",\n      messageAvatarAlt: \"messageAvatarAlt\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return Messages;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // eslint-disable no-forward-ref\n\n/**\n * @hidden\n */\n\n\nlet LocalizedMessagesDirective = /*#__PURE__*/(() => {\n  class LocalizedMessagesDirective extends Messages {\n    constructor(service) {\n      super();\n      this.service = service;\n    }\n\n  }\n\n  LocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n    return new (t || LocalizedMessagesDirective)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  };\n\n  LocalizedMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: LocalizedMessagesDirective,\n    selectors: [[\"\", \"kendoChatLocalizedMessages\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Messages,\n      useExisting: forwardRef(() => LocalizedMessagesDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return LocalizedMessagesDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // Consider scroll to be at the bottom when within this number of pixels from the container height.\n\n\nconst maxDelta = 2;\n/**\n * @hidden\n */\n\nlet ScrollAnchorDirective = /*#__PURE__*/(() => {\n  class ScrollAnchorDirective {\n    constructor(element, zone, renderer) {\n      this.element = element;\n      this.zone = zone;\n      this.renderer = renderer;\n      this.autoScroll = true;\n      this.autoScrollChange = new EventEmitter();\n      this.overflowAnchor = 'none';\n      this.scrolling = false;\n    }\n\n    ngOnInit() {\n      this.zone.runOutsideAngular(() => {\n        this.unsubscribe = this.renderer.listen(this.element.nativeElement, 'scroll', () => this.onScroll());\n      });\n    }\n\n    ngAfterViewInit() {\n      this.scrollToBottom();\n    }\n\n    ngOnDestroy() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n\n    onScroll() {\n      if (this.scrolling) {\n        return;\n      }\n\n      const el = this.element.nativeElement;\n      const bottom = el.scrollTop + el.offsetHeight;\n      const height = el.scrollHeight;\n      const atBottom = height - bottom < maxDelta;\n\n      if (this.autoScroll !== atBottom) {\n        this.zone.run(() => {\n          this.autoScroll = atBottom;\n          this.autoScrollChange.emit(this.autoScroll);\n        });\n      }\n    }\n\n    scrollToBottom() {\n      if (!this.autoScroll) {\n        return;\n      }\n\n      const el = this.element.nativeElement;\n      el.scrollTop = el.scrollHeight - el.clientHeight;\n      this.scrolling = true;\n      this.zone.runOutsideAngular(() => setTimeout(() => this.scrolling = false, 1000));\n    }\n\n  }\n\n  ScrollAnchorDirective.ɵfac = function ScrollAnchorDirective_Factory(t) {\n    return new (t || ScrollAnchorDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  ScrollAnchorDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ScrollAnchorDirective,\n    selectors: [[\"\", \"kendoChatScrollAnchor\", \"\"]],\n    hostVars: 2,\n    hostBindings: function ScrollAnchorDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"overflow-anchor\", ctx.overflowAnchor);\n      }\n    },\n    inputs: {\n      autoScroll: \"autoScroll\"\n    },\n    outputs: {\n      autoScrollChange: \"autoScrollChange\"\n    },\n    exportAs: [\"scrollAnchor\"]\n  });\n  return ScrollAnchorDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Represents the Kendo UI Chat component for Angular.\n *\n * {% meta height:700 %}\n * {% embed_file echo/app.component.ts preview %}\n * {% embed_file shared/app.module.ts %}\n * {% embed_file shared/main.ts hidden %}\n * {% endmeta %}\n *\n */\n\n\nlet ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(localization, zone) {\n      this.localization = localization;\n      this.zone = zone;\n      /**\n       * Used to switch between a one-liner input or a textarea.\n       * ([see example]({% slug message_box %})#toc-message-box-types).\n       * @default input\n       */\n\n      this.messageBoxType = 'textbox';\n      /**\n       * Fires when the user types a message and clicks the **Send** button or presses **Enter**.\n       * Emits the [`SendMessageEvent`]({% slug api_conversational-ui_sendmessageevent %}).\n       *\n       * > The message is not automatically appended to the `messages` array.\n       */\n\n      this.sendMessage = new EventEmitter();\n      /**\n       * Fires when the user clicks a quick action button.\n       * The Chat internally handles the `reply`, `openUrl`, and `call` [known actions]({% slug api_conversational-ui_actiontype %}).\n       *\n       * Emits the [`ExecuteActionEvent`]({% slug api_conversational-ui_executeactionevent %}).\n       * The event is preventable. If `preventDefault` is called, the built-in action will be suppressed.\n       */\n\n      this.executeAction = new EventEmitter();\n      /**\n       * @hidden\n       */\n\n      this.autoScroll = true;\n      validatePackage(packageMetadata);\n      this.direction = localization.rtl ? 'rtl' : 'ltr';\n      this.localizationChangeSubscription = localization.changes.subscribe(({\n        rtl\n      }) => {\n        this.direction = rtl ? 'rtl' : 'ltr';\n      });\n    }\n\n    get className() {\n      return 'k-chat';\n    }\n\n    get dirAttr() {\n      return this.direction;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get localizationText() {\n      return this.localization;\n    }\n\n    ngOnChanges() {\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.messageList.nativeElement.style.flex = '1 1 auto';\n      }));\n    }\n\n    ngAfterViewInit() {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (!this.user) {\n        throw new Error('User must be set and have a valid id.');\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    dispatchAction(e) {\n      this.executeAction.emit(e);\n\n      if (!e.isDefaultPrevented()) {\n        const handler = makeHandler(e.action);\n        handler(e.action, this);\n\n        if (!this.messageBoxTemplate) {\n          this.messageBox.messageBoxInput.nativeElement.focus();\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    textFor(key) {\n      return this.localization.get(key);\n    }\n\n  }\n\n  ChatComponent.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  ChatComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"kendo-chat\"]],\n    contentQueries: function ChatComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, AttachmentTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MessageTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, ChatMessageBoxTemplateDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.attachmentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageBoxTemplate = _t.first);\n      }\n    },\n    viewQuery: function ChatComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageBox = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageList = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function ChatComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"dir\", ctx.dirAttr);\n        i0.ɵɵclassMap(ctx.className);\n      }\n    },\n    inputs: {\n      messages: \"messages\",\n      user: \"user\",\n      messageBoxType: \"messageBoxType\"\n    },\n    outputs: {\n      sendMessage: \"sendMessage\",\n      executeAction: \"executeAction\"\n    },\n    features: [i0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.chat'\n    }]), i0.ɵɵNgOnChangesFeature],\n    decls: 7,\n    vars: 12,\n    consts: function () {\n      let i18n_6;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The placholder text of the message text input\n         * @meaning kendo.chat.messagePlaceholder\n         */\n        const MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_7 = goog.getMsg(\"Type a message...\");\n        i18n_6 = MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_7;\n      } else {\n        i18n_6 = $localize`:kendo.chat.messagePlaceholder|The placholder text of the message text input:Type a message...`;\n      }\n\n      let i18n_8;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text for the Send button\n         * @meaning kendo.chat.send\n         */\n        const MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_9 = goog.getMsg(\"Send...\");\n        i18n_8 = MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_9;\n      } else {\n        i18n_8 = $localize`:kendo.chat.send|The text for the Send button:Send...`;\n      }\n\n      let i18n_10;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label text for the Message list\n         * @meaning kendo.chat.messageListLabel\n         */\n        const MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_11 = goog.getMsg(\"Message list\");\n        i18n_10 = MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_11;\n      } else {\n        i18n_10 = $localize`:kendo.chat.messageListLabel|The label text for the Message list:Message list`;\n      }\n\n      let i18n_12;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label text for the Message input box\n         * @meaning kendo.chat.messageBoxInputLabel\n         */\n        const MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_13 = goog.getMsg(\"Message\");\n        i18n_12 = MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_13;\n      } else {\n        i18n_12 = $localize`:kendo.chat.messageBoxInputLabel|The label text for the Message input box:Message`;\n      }\n\n      let i18n_14;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text for the left arrow of the message attachments\n         * @meaning kendo.chat.messageAttachmentLeftArrow\n         */\n        const MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_15 = goog.getMsg(\"Previous item\");\n        i18n_14 = MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_15;\n      } else {\n        i18n_14 = $localize`:kendo.chat.messageAttachmentLeftArrow|The text for the left arrow of the message attachments:Previous item`;\n      }\n\n      let i18n_16;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text for the right arrow of the message attachments\n         * @meaning kendo.chat.messageAttachmentRightArrow\n         */\n        const MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_17 = goog.getMsg(\"Next item\");\n        i18n_16 = MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_17;\n      } else {\n        i18n_16 = $localize`:kendo.chat.messageAttachmentRightArrow|The text for the right arrow of the message attachments:Next item`;\n      }\n\n      let i18n_18;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The alt attribute text for the avatar\n         * @meaning kendo.chat.messageAvatarAlt\n         */\n        const MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_19 = goog.getMsg(\"Avatar\");\n        i18n_18 = MSG_C__USERS_ARNAV_DOWNLOADS_MMSHJB__RUN_NODE_MODULES__PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_FESM2015_PROGRESS_KENDO_ANGULAR_CONVERSATIONAL_UI_MJS_19;\n      } else {\n        i18n_18 = $localize`:kendo.chat.messageAvatarAlt|The alt attribute text for the avatar:Avatar`;\n      }\n\n      return [[\"kendoChatLocalizedMessages\", \"\", \"messagePlaceholder\", i18n_6, \"send\", i18n_8, \"messageListLabel\", i18n_10, \"messageBoxInputLabel\", i18n_12, \"messageAttachmentLeftArrow\", i18n_14, \"messageAttachmentRightArrow\", i18n_16, \"messageAvatarAlt\", i18n_18], [\"aria-live\", \"polite\", \"role\", \"log\", \"kendoChatScrollAnchor\", \"\", 1, \"k-message-list\", \"k-avatars\", 3, \"autoScroll\", \"autoScrollChange\"], [\"messageList\", \"\", \"anchor\", \"scrollAnchor\"], [3, \"messages\", \"messageTemplate\", \"localization\", \"attachmentTemplate\", \"user\", \"executeAction\", \"resize\", \"navigate\"], [3, \"messageBoxTemplate\", \"type\", \"user\", \"autoScroll\", \"localization\", \"sendMessage\"], [\"messageBox\", \"\"]];\n    },\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵelementStart(1, \"div\", 1, 2);\n        i0.ɵɵlistener(\"autoScrollChange\", function ChatComponent_Template_div_autoScrollChange_1_listener($event) {\n          return ctx.autoScroll = $event;\n        });\n        i0.ɵɵelementStart(4, \"kendo-chat-message-list\", 3);\n        i0.ɵɵlistener(\"executeAction\", function ChatComponent_Template_kendo_chat_message_list_executeAction_4_listener($event) {\n          return ctx.dispatchAction($event);\n        })(\"resize\", function ChatComponent_Template_kendo_chat_message_list_resize_4_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r1 = i0.ɵɵreference(3);\n\n          return _r1.scrollToBottom();\n        })(\"navigate\", function ChatComponent_Template_kendo_chat_message_list_navigate_4_listener() {\n          return ctx.autoScroll = false;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"kendo-message-box\", 4, 5);\n        i0.ɵɵlistener(\"sendMessage\", function ChatComponent_Template_kendo_message_box_sendMessage_5_listener($event) {\n          return ctx.sendMessage.emit($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"autoScroll\", ctx.autoScroll);\n        i0.ɵɵattribute(\"aria-label\", ctx.textFor(\"messageListLabel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"messages\", ctx.messages)(\"messageTemplate\", ctx.messageTemplate)(\"localization\", ctx.localizationText)(\"attachmentTemplate\", ctx.attachmentTemplate)(\"user\", ctx.user);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"messageBoxTemplate\", ctx.messageBoxTemplate)(\"type\", ctx.messageBoxType)(\"user\", ctx.user)(\"autoScroll\", ctx.autoScroll)(\"localization\", ctx.localizationText);\n      }\n    },\n    directives: [MessageListComponent, MessageBoxComponent, LocalizedMessagesDirective, ScrollAnchorDirective],\n    encapsulation: 2\n  });\n  return ChatComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // eslint-disable no-forward-ref\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_chat %}#toc-custom-messages)).\n */\n\n\nlet CustomMessagesComponent = /*#__PURE__*/(() => {\n  class CustomMessagesComponent extends Messages {\n    constructor(service) {\n      super();\n      this.service = service;\n    }\n\n    get override() {\n      return true;\n    }\n\n  }\n\n  CustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n    return new (t || CustomMessagesComponent)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  };\n\n  CustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CustomMessagesComponent,\n    selectors: [[\"kendo-chat-messages\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Messages,\n      useExisting: forwardRef(() => CustomMessagesComponent)\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function CustomMessagesComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return CustomMessagesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Represents a Hero Card component ([see example]({% slug dialogflow_chat %})).\n * Hero cards host a single large image and action buttons with text content.\n */\n\n\nlet HeroCardComponent = /*#__PURE__*/(() => {\n  class HeroCardComponent {\n    constructor() {\n      this.cssClass = true;\n      /**\n       * Fires when the user clicks a button.\n       */\n\n      this.executeAction = new EventEmitter();\n    }\n\n    onClick(action) {\n      this.executeAction.next(action);\n    }\n\n  }\n\n  HeroCardComponent.ɵfac = function HeroCardComponent_Factory(t) {\n    return new (t || HeroCardComponent)();\n  };\n\n  HeroCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: HeroCardComponent,\n    selectors: [[\"kendo-chat-hero-card\"]],\n    hostVars: 2,\n    hostBindings: function HeroCardComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-card\", ctx.cssClass);\n      }\n    },\n    inputs: {\n      imageUrl: \"imageUrl\",\n      title: \"title\",\n      subtitle: \"subtitle\",\n      actions: \"actions\"\n    },\n    outputs: {\n      executeAction: \"executeAction\"\n    },\n    decls: 6,\n    vars: 4,\n    consts: [[\"class\", \"k-card-image\", 3, \"src\", 4, \"ngIf\"], [1, \"k-card-body\"], [\"class\", \"k-card-title\", 4, \"ngIf\"], [\"class\", \"k-card-subtitle\", 4, \"ngIf\"], [1, \"k-card-actions\", \"k-card-actions-vertical\"], [\"class\", \"k-card-action\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-card-image\", 3, \"src\"], [1, \"k-card-title\"], [1, \"k-card-subtitle\"], [1, \"k-card-action\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", 3, \"click\"]],\n    template: function HeroCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, HeroCardComponent_img_0_Template, 1, 1, \"img\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, HeroCardComponent_h5_2_Template, 2, 1, \"h5\", 2);\n        i0.ɵɵtemplate(3, HeroCardComponent_h6_3_Template, 2, 1, \"h6\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, HeroCardComponent_span_5_Template, 3, 1, \"span\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.imageUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.subtitle);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.actions);\n      }\n    },\n    directives: [i1$2.ButtonComponent, i2.NgIf, i2.NgForOf],\n    encapsulation: 2\n  });\n  return HeroCardComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst PUBLIC_DIRECTIVES = [ChatComponent, CustomMessagesComponent, AttachmentTemplateDirective, MessageTemplateDirective, HeroCardComponent, ChatMessageBoxTemplateDirective];\nconst PRIVATE_DIRECTIVES = [AttachmentComponent, FocusedStateDirective, LocalizedMessagesDirective, MessageAttachmentsComponent, MessageComponent, MessageListComponent, MessageTemplateDirective, ScrollAnchorDirective, SuggestedActionsComponent, MessageBoxComponent];\n/**\n * The [NgModule](link:site.data.urls.angular['ngmodules']) for the Chat component.\n *\n * @example\n * ```ts-no-run\n * import { NgModule } from '@angular/core';\n * import { Component } from '@angular/core';\n * import { BrowserModule } from '@angular/platform-browser';\n *\n * import { ChatModule } from '@progress/kendo-angular-conversational-ui';\n * import { AppComponent }   from './app.component';\n *\n * _@NgModule({\n *   imports:      [ BrowserModule, ChatModule ],\n *   declarations: [ AppComponent ],\n *   bootstrap:    [ AppComponent ]\n * })\n *\n * export class AppModule { }\n * ```\n */\n\nlet ChatModule = /*#__PURE__*/(() => {\n  class ChatModule {}\n\n  ChatModule.ɵfac = function ChatModule_Factory(t) {\n    return new (t || ChatModule)();\n  };\n\n  ChatModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ChatModule\n  });\n  ChatModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[ButtonModule, CommonModule, ResizeSensorModule]]\n  });\n  return ChatModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AttachmentTemplateDirective, ChatComponent, ChatMessageBoxTemplateDirective, ChatModule, CustomMessagesComponent, ExecuteActionEvent, HeroCardComponent, MessageTemplateDirective, SendMessageEvent };","map":null,"metadata":{},"sourceType":"module"}